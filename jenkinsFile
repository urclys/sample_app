pipeline {
    agent any
    tools {
        nodejs 'node'
    }
    options {
        skipDefaultCheckout(true)
        parallelsAlwaysFailFast()
        disableConcurrentBuilds()
        buildDiscarder(logRotator(numToKeepStr: '20', artifactNumToKeepStr: '20'))
    }
    
    stages {
        
        stage('Clean workspace') {
        steps {
            sh 'chown -R jenkins:jenkins .'
            sh 'chmod -R 755 .'
            // sh 'git clone https://github.com/urclys/sample_app.git'
        }}
        stage('Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM', 
                    branches: [[name: '*/master']],
                    doGenerateSubmoduleConfigurations: false, 
                    extensions: [[$class: 'CleanBeforeCheckout']], 
                    submoduleCfg: [], 
                    userRemoteConfigs: [[url: 'https://github.com/urclys/sample_app.git']]
                ])
            }
        }
        stage('Build') {
            steps {
                // Install dependencies and build your application
                sh 'npm install'
                sh 'npm install webpack'
                sh 'npm run build'
            }
        }
        stage('Confirmation') {
            steps {
                script {
                    def userInput = input(id: 'confirm', message: 'Proceed to the testing stage?', parameters: [ [$class: 'BooleanParameterDefinition', defaultValue: false, description: 'Proceed?', name: 'yesNo'] ])
                    if(!userInput) {
                        error("User chose not to proceed. Exiting...")
                    }
                }
            }
        }
        stage('Test') {
            steps {
                // Run your application's tests
                sh 'npm run test --passWithNoTests'
            }
        }
        // Other stages, like deploying your application, would go here
    }
}

// pipeline {
//     agent any
//     tools { 
//         nodejs 'node' 
//     }
//     options {
//         // skipDefaultCheckout(true)
//         parallelsAlwaysFailFast()
//         disableConcurrentBuilds()
//         buildDiscarder(logRotator(numToKeepStr: '20', artifactNumToKeepStr: '20'))
//     }
    
//     stages {
//         stage('Checkout') {
//             steps {
//                 checkout scm
//             }
//         }
//         stage('Build') {
//             steps {
//                 script {
//                     // sh 'npm install'
//                     // sh 'npm run build'
//                     sh 'ls -a'
//                 }
//             }
//         }
//         // stage('Publish') {
//         //     steps {
//         //         script {
//         //             // sh 'npm publish'
//         //         }
//         //     }
//         // }
//     }
// }
